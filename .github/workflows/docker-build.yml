name: Docker Build

on:
  push:
    branches:
      - main

env:
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: test
  REPOSITORY: expouser

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

#      - name: Build and Push Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          push: true
#          tags: /yourapp:latest

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Determine Docker Tag
        id: increment_tag
        run: |
          LAST_TAG=$(git describe --abbrev=0 --tags 2>/dev/null || echo "")
          if [[ $LAST_TAG =~ v[0-9]+\.[0-9]+ ]]; then
          MAJOR_MINOR=$(echo $LAST_TAG | awk -F'.' '{printf "%d.%d", $1, $2}')
          PATCH=$(echo $LAST_TAG | awk -F'.' '{printf "%d", $3}')
          NEW_TAG="$MAJOR_MINOR.$((PATCH + 1))"
          else
            NEW_TAG="v1.0.0"
          fi
          echo "DOCKER_TAG=${NEW_TAG}" >> $GITHUB_ENV
      - name: Build image
        env:
          REPOSITORY: expouser
          IMAGE_TAG: ${{ env.DOCKER_TAG }}
        run: |
          echo $IMAGE_TAG
          docker build --no-cache  \
          -t $REPOSITORY/$IMAGE_NAME:$IMAGE_TAG \
          -f myapp/Dockerfile .
          docker push  $REPOSITORY/$IMAGE_NAME:$IMAGE_TAG
