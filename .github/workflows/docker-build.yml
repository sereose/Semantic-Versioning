name: Docker Build

on:
  push:
    branches:
      - main

env:
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: test
  REPOSITORY: expouser

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get latest Docker tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --abbrev=0 --tags)
          if [[ -z "$latest_tag" ]]; then
          latest_tag="v0"
          fi
          echo "LATEST_TAG=${latest_tag}" >> $GITHUB_ENV

      - name: Increment Docker tag
        id: increment_tag
        run: |
          echo "Latest tag is ${{ env.LATEST_TAG }}"
          TAG_NUMBER=$(echo ${{ env.LATEST_TAG }} | awk -F'v' '{printf "%d", $NF}')
          NEW_TAG=$(echo ${{ env.LATEST_TAG }} | awk -F'v' '{$NF = ""; printf "%s%d", $0, '${TAG_NUMBER}' + 1}')
          echo "New tag is $NEW_TAG"
          echo "new_tag=${NEW_TAG}" >> $GITHUB_ENV

      - name: Build image
        env:
          REPOSITORY: expouser
          IMAGE_TAG: ${{ env.DOCKER_TAG }}
        run: |
          echo $IMAGE_TAG
          echo ${{ env.new_tag }}
          docker build --no-cache  \
          -t $REPOSITORY/$IMAGE_NAME:$IMAGE_TAG \
          -f myapp/Dockerfile .
          docker push  $REPOSITORY/$IMAGE_NAME:$IMAGE_TAG
